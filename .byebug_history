exit
continue
@current_user.email
@current_user
@current_user[:email]
@current_user.email
@current_user
session[:user_id]
session
User.find(session[:user_id]).attributes.slice(:email)
User.find(session[:user_id]).slice(:email)
@current_user
Admin::Authentication.methods
Admin::Authentication.authenticated?
Admin::Authentication.authenticated
Admin::Authentication.authenticated?
User.find(session[:user_id])
session[:user_id]
session
params[:session]["password"]
params[:session][:password]
@user.password == "hesloheslo"
@user.password
@user
routes.admin_root_path
session[:user_id]
session.inspect
session
continue
Password.new
@user.password_hash
@user.password
@user
continue
@user
@e
User.find_by(email: params[:session]["email"], password: phash)
User.find_by(email: params[:session]["email"], password: params[:session]["password"])
User.find_by(email: params[:session]["email"])
params[:session]["email"]
params[:session][:email]
params[:session]
user = User.find_by(email: params[:session][:email], password: phash)
phash
require 'bcrypt'
Password.new
User.find_by(email: "michal.valasek@gmail.com", password: "bbb")
User.find_by(params[:session])
params[:session]
params
User.find_by(email: params[:session][:email], password: params[:session][:password])
User.find_by(email: session[:email], password: session[:password])
u.persisted?
u = User.create(email: "michal.valasek@gmail.com", password: "hesloheslo")
User.create(email: "michal.valasek@gmail.com", password: "hesloheslo")
reload!
u = User.create(email: "michal.valasek", password: "hesloheslo")
u.password = "hesloheslo"
u = User.new(email: "michal.valasek")
u = User.create(email: "michal.valasek", password: "hesloheslo")
User
params[:session]
User
pp params
p params
p
pp
params[:session]
params
